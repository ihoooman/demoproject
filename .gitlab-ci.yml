# GitLab CI/CD Pipeline for Django Project

stages:
  - test
  - build
  - deploy

variables:
  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  DOCKER_TAG: $CI_COMMIT_SHORT_SHA
  POSTGRES_DB: test_db
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_HOST: postgres
  POSTGRES_PORT: 5432
  DATABASE_URL: "postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DB"
  DJANGO_SETTINGS_MODULE: LastDjangoProject.settings
  SECRET_KEY: "django-insecure-ci-test-key-not-for-production"
  ALLOWED_HOSTS: "localhost,127.0.0.1"
  # Add other environment variables as needed
  # For production, use GitLab CI/CD variables instead of hardcoding sensitive values

# Test stage
test:
  stage: test
  image: python:3.11-slim
  services:
    - name: postgres:14
      alias: postgres
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .pip-cache/
  before_script:
    - apt-get update && apt-get install -y gcc
    - pip install --cache-dir=.pip-cache --no-cache-dir -r requirements.txt
  script:
    - python manage.py migrate
    - pytest
  only:
    - main
    - merge_requests

# Build stage
build:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $DOCKER_IMAGE:$DOCKER_TAG .
    - docker push $DOCKER_IMAGE:$DOCKER_TAG
    # Tag as latest if on main branch
    - if [ "$CI_COMMIT_REF_NAME" = "main" ]; then
        docker tag $DOCKER_IMAGE:$DOCKER_TAG $DOCKER_IMAGE:latest;
        docker push $DOCKER_IMAGE:latest;
      fi
  only:
    - main
    - tags

# Deploy stage (commented out as deployment details are environment-specific)
# Uncomment and customize based on your deployment environment
# deploy:
#   stage: deploy
#   image: alpine:latest
#   before_script:
#     - apk add --no-cache curl
#   script:
#     - echo "Deploying application..."
#     # Add deployment commands here (e.g., kubectl, ssh, etc.)
#   environment:
#     name: production
#   only:
#     - main
